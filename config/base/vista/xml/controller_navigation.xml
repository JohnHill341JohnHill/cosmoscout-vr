<!-- 
SPDX-FileCopyrightText: German Aerospace Center (DLR) <cosmoscout@dlr.de>
SPDX-License-Identifier: MIT
-->

<module>
  <nodespace>
  </nodespace>
  <graph>
    <node name="controller_source" type="DriverSensor">
      <param name="sensor_index" value="0"/>
      <param name="driver" value="SDL2CONTROLLER"/>
    </node>

    <node name="controller" type="HistoryProject">
    </node>

    <node name="project_mode" type="ConstantValue[int]">
      <param name="value" value="0"/>
    </node>

    <!-- Constants #################################### -->
    <node name="-one" type="ConstantValue[float]">
      <param name="value" value="-1"/>
    </node>

    <node name="zero" type="ConstantValue[float]">
      <param name="value" value="0"/>
    </node>

    <node name="one" type="ConstantValue[float]">
      <param name="value" value="1"/>
    </node>

    <node name="two" type="ConstantValue[float]">
      <param name="value" value="2"/>
    </node>
    
    <node name="four" type="ConstantValue[float]">
      <param name="value" value="4"/>
    </node>
    
    <node name="eight" type="ConstantValue[float]">
      <param name="value" value="8"/>
    </node>

    <node name="deadzone" type="ConstantValue[float]">
      <param name="value" value="0.075"/>
    </node>

    <!-- ############################################## -->

    <!-- Create a deadzone for the controller's left stick. -->
    <node name="leftStickDeadZoneX" type="Threshold[float]">
        <param name="mode" value="output_zero" />
        <param name="compare_absolute_value" value="true" />
        <param name="subtract_threshold" value="true" />
    </node>

    <node name="leftStickDeadZoneY" type="Threshold[float]">
        <param name="mode" value="output_zero" />
        <param name="compare_absolute_value" value="true" />
        <param name="subtract_threshold" value="true" />
    </node>

    <node name="substract_vertical" type="Substract[float]"/>
    <node name="translation"   type="Compose3DVector" />

    <!-- Create a deadzone for the controller's right stick. -->
    <node name="rightStickDeadZoneX" type="Threshold[float]">
        <param name="mode" value="output_zero" />
        <param name="compare_absolute_value" value="true" />
        <param name="subtract_threshold" value="true" />
    </node>

    <node name="rightStickDeadZoneY" type="Threshold[float]">
        <param name="mode" value="output_zero" />
        <param name="compare_absolute_value" value="true" />
        <param name="subtract_threshold" value="true" />
    </node>
    
    <!-- For converting the shoulder button presses to floats. -->
    <node name="shoulderLeftConvert"  type="TypeConvert[bool,float]"/>
    <node name="shoulderRightConvert" type="TypeConvert[bool,float]"/>

    <node name="invert_yaw"     type="Multiply[float]" />
    <node name="substract_roll" type="Substract[float]"/>
    <node name="rotation_axis"  type="Compose3DVector" />
    <node name="create_quat"    type="EulerRotate" />

    <node name="timer" type="Timer" />

    <node name="nav_mode" type="ConstantValue[int]">
      <param name="value" value="2"/>
    </node>

    <node name="observer" type="ObserverNavigationNode">
      <param name="max_linear_speed" value="10, 10, 20" />
      <param name="max_angular_speed" value="1" />
      <param name="angular_deceleration" value="0" />
      <param name="linear_deceleration" value="0" />
      <param name="prevent_navigation_when_hovered_gui" value="false" />
    </node>
  </graph>
  <edges>
    <edge fromnode="controller_source" tonode="controller" fromport="history" toport="history" />
    <edge fromnode="project_mode"      tonode="controller" fromport="value"   toport="sampling_mode" />

    <!-- Deadzone Handling -->
    <edge fromnode="controller" tonode="leftStickDeadZoneX" fromport="STICK_LEFT_X" toport="in"/>
    <edge fromnode="deadzone"   tonode="leftStickDeadZoneX" fromport="value"        toport="threshold"/>

    <edge fromnode="controller" tonode="leftStickDeadZoneY" fromport="STICK_LEFT_Y" toport="in"/>
    <edge fromnode="deadzone"   tonode="leftStickDeadZoneY" fromport="value"        toport="threshold"/>
    
    <edge fromnode="controller" tonode="rightStickDeadZoneX" fromport="STICK_RIGHT_X" toport="in"/>
    <edge fromnode="deadzone"   tonode="rightStickDeadZoneX" fromport="value"         toport="threshold"/>

    <edge fromnode="controller" tonode="rightStickDeadZoneY" fromport="STICK_RIGHT_Y" toport="in"/>
    <edge fromnode="deadzone"   tonode="rightStickDeadZoneY" fromport="value"         toport="threshold"/>

    <!-- Right trigger minus left trigger equals vertical change. -->
    <edge fromnode="controller" tonode="substract_vertical" fromport="TRIGGER_RIGHT" toport="first"/>
    <edge fromnode="controller" tonode="substract_vertical" fromport="TRIGGER_LEFT"  toport="second"/>

    <!-- Create the 3d vector responsible for navigation -->
    <edge fromnode="leftStickDeadZoneX" tonode="translation" fromport="out" toport="x"/>
    <edge fromnode="substract_vertical" tonode="translation" fromport="out" toport="y"/>
    <edge fromnode="leftStickDeadZoneY" tonode="translation" fromport="out" toport="z"/>

    <edge fromnode="translation" tonode="observer" fromport="out" toport="translation"/>

    <!-- Deadzone Handling -->
    <edge fromnode="rightStickDeadZoneX" tonode="invert_yaw" fromport="out"   toport="first"/>
    <edge fromnode="-one"                tonode="invert_yaw" fromport="value" toport="second"/>

    <!-- Convert the shoulder button presses to floats. -->
    <edge fromnode="controller" tonode="shoulderLeftConvert"  fromport="SHOULDER_LEFT_PRESSED"  toport="in"/>
    <edge fromnode="controller" tonode="shoulderRightConvert" fromport="SHOULDER_RIGHT_PRESSED" toport="in"/>

    <!-- Left shoulder button minus right shoulder button equals roll change. -->
    <edge fromnode="shoulderLeftConvert"  tonode="substract_roll" fromport="out" toport="first"/>
    <edge fromnode="shoulderRightConvert" tonode="substract_roll" fromport="out" toport="second"/>

    <!-- Create the 3d vector and quaternion responsible for rotation -->
    <edge fromnode="rightStickDeadZoneY" tonode="rotation_axis" fromport="out" toport="x"/>
    <edge fromnode="invert_yaw"          tonode="rotation_axis" fromport="out" toport="y"/>
    <edge fromnode="substract_roll"      tonode="rotation_axis" fromport="out" toport="z"/>

    <edge fromnode="rotation_axis" tonode="create_quat" fromport="out" toport="angles"/>
    
    <edge fromnode="create_quat"   tonode="observer" fromport="out" toport="rotation"/>

    <!-- Set the delta time -->
    <edge fromnode="timer" tonode="observer" fromport="time" toport="time" />
  </edges>
</module>